<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Suraj Jha Blogs Blog</title>
        <link>https://jhasuraj.com/blog/</link>
        <description>Suraj Jha Blogs Blog</description>
        <lastBuildDate>Fri, 12 May 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Blockchain Honors Smart Contracts & Crypto currency]]></title>
            <link>https://jhasuraj.com/blog/blockchain-honors-smart-contracts-crypto-currency</link>
            <guid>blockchain-honors-smart-contracts-crypto-currency</guid>
            <pubDate>Fri, 12 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[What is Smart contract in Blockchain? Elaborate its features, advantages and use cases?]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-smart-contract-in-blockchain-elaborate-its-features-advantages-and-use-cases">What is Smart contract in Blockchain? Elaborate its features, advantages and use cases?<a class="hash-link" href="#what-is-smart-contract-in-blockchain-elaborate-its-features-advantages-and-use-cases" title="Direct link to heading">​</a></h2><p>Smart contract is a self-executing program that runs on a blockchain network and automatically enforces the terms of a contract. It is a code that specifies the rules and regulations of an agreement, and it can automatically execute transactions when certain conditions are met. Smart contracts are a core feature of blockchain technology, as they enable trust and transparency in a decentralized system.</p><p>Features:</p><ul><li>Immutable: Smart contracts are recorded on the blockchain network, which makes them tamper-proof and immutable. Once a smart contract is deployed on the network, it cannot be altered or modified.</li><li>Self-executing: Smart contracts are self-executing and automated. They can automatically execute transactions when certain conditions are met, which eliminates the need for intermediaries.</li><li>Decentralized: Smart contracts are executed on a decentralized network, which eliminates the need for a centralized authority to oversee the transaction.</li><li>Trustworthy: Smart contracts are transparent and verifiable. Once a smart contract is deployed on the network, all parties involved can verify its authenticity and trustworthiness.</li></ul><p>Advantages:</p><ul><li>Efficiency: Smart contracts eliminate the need for intermediaries, which reduces the time and cost of transactions. They also automate the execution of transactions, which makes the process faster and more efficient.</li><li>Transparency: Smart contracts are transparent and verifiable. All parties involved can verify the terms of the contract and the execution of transactions.</li><li>Trust: Smart contracts are tamper-proof and immutable, which makes them trustworthy. They eliminate the need for a centralized authority to oversee the transaction, which increases trust between the parties involved.</li><li>Security: Smart contracts are executed on a decentralized network, which makes them more secure than traditional contracts. They are also encrypted, which reduces the risk of fraud and hacking.</li></ul><p>Use cases:</p><ul><li>Supply chain management: Smart contracts can be used to automate the supply chain management process, which eliminates the need for intermediaries and increases efficiency.</li><li>Real estate: Smart contracts can be used to automate the process of buying and selling real estate, which reduces the time and cost of transactions.</li><li>Insurance: Smart contracts can be used to automate the insurance claims process, which makes it faster and more efficient.</li><li>Voting: Smart contracts can be used to automate the voting process, which increases transparency and reduces the risk of fraud.</li></ul><p>In conclusion, smart contracts are a powerful feature of blockchain technology that enable trust and transparency in a decentralized system. They are immutable, self-executing, decentralized, and trustworthy. Smart contracts offer many advantages, including efficiency, transparency, trust, and security. They can be used in various industries, such as supply chain management, real estate, insurance, and voting.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="describe-the-structure-of-smart-contract">Describe the Structure of Smart Contract.<a class="hash-link" href="#describe-the-structure-of-smart-contract" title="Direct link to heading">​</a></h2><p>Smart contracts are self-executing computer programs that enforce the terms of an agreement between parties on a blockchain network. The structure of a smart contract is defined using Solidity, which is a contract-oriented programming language. Here are some key concepts that define the structure of a smart contract:</p><ol><li><p>Types: The contract type is a struct that organizes a set of related functions around a single purpose. Address types are Ethereum addresses that equate to 20 bytes, and are represented in hexadecimal form beginning with the prefix 0x. Other types include booleans, integers, fixed-point numbers, byte arrays, and literals.</p></li><li><p>Data Storage: In Solidity, reference data values can be stored as storage, memory or calldata depending on the role of the data stored. Storage keeps the data permanently on the blockchain and is expensive, while memory values are stored only for the lifetime of the smart contract's execution and are inexpensive to use. Calldata is a special data location that contains the function arguments and is only available for external function call parameters.</p></li><li><p>Function Modifiers: Functions exist to get/set information based on calls initiated by external transactions. Access modifiers include public, external, internal, and private. Other modifiers include view, pure, and payable.</p></li><li><p>Special Functions and Variables: There are a number of global variables and functions that will be helpful to remember you have access to, such as block.number, block.timestamp, block.gaslimit, msg.sender, and msg.value. Special functions include receive and fallback.</p></li><li><p>Events: Solidity events are emitted when a contract is executed and stored permanently on the blockchain but aren't accessible to be modified/read by smart contracts. They can be declared and emitted using the event keyword and can be accessed in a variety of different ways.</p></li></ol><p>Overall, the structure of a smart contract involves defining types, data storage, function modifiers, special functions/variables, and events using Solidity.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="elaborate-how-the-smart-contracts-interact-with-application">Elaborate how the smart contracts interact with application.<a class="hash-link" href="#elaborate-how-the-smart-contracts-interact-with-application" title="Direct link to heading">​</a></h2><p>Smart contracts are self-executing programs that operate on a blockchain, enabling developers to create decentralized applications (dApps). These contracts are written in programming languages such as Solidity, Vyper, and others, and they run on top of a blockchain network. </p><p>Smart contracts can interact with applications in various ways. One way is through the use of an Application Programming Interface (API). The API provides a set of protocols and tools that enable the smart contract to communicate with the application. The smart contract can then use this communication to receive input from the application, process it, and return output to the application. </p><p>Another way that smart contracts can interact with applications is through the use of events. Smart contracts can emit events, which can be monitored by the application. For example, if a smart contract is used to facilitate a payment, it can emit an event when the payment is complete. The application can then respond to this event by updating its user interface or performing other actions.</p><p>Smart contracts can also interact with applications through the use of external data feeds. For example, a smart contract may need to obtain data from an external source, such as the current price of a particular commodity. The smart contract can then use this data to make decisions and perform actions.</p><p>In summary, smart contracts can interact with applications through APIs, events, and external data feeds. These interactions enable developers to create decentralized applications that can operate autonomously and transparently, without the need for intermediaries.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="classify-the-different-smart-contract-design-patterns">Classify the different smart contract design patterns.<a class="hash-link" href="#classify-the-different-smart-contract-design-patterns" title="Direct link to heading">​</a></h2><p>Smart contract design patterns are reusable, repeatable solutions in writing code that serve a wide range of purposes. These patterns can be classified into four main functions: security patterns, efficiency patterns, access control patterns, and contract management patterns. </p><ol><li><p><strong>Security patterns</strong> are designed to maximize the level of security of a smart contract against any risk. They are used to ward off reentrancy attacks, overflow attacks, or the flawed behavior of the actual smart contracts. Examples of security design patterns include balance limit pattern, pull over push payments, secure ether transfer, fork check, termination, math pattern, time constraint, mutex pattern, auto deprecation design pattern, and withdrawal pattern.</p></li><li><p><strong>Efficiency patterns</strong> optimize the operation of a smart contract or reduce the costs associated with using one. Using these patterns can save time and money for operators and users. Examples of efficiency patterns include use libraries, incentive execution, tight variable packing, limit storage, challenge response, write values, pull payments, publisher-subscriber, avoid redundant operations, use libraries, short constant strings, fail early and fail loud, limit modifiers, minimize on-chain data, and low contract footprint.</p></li><li><p><strong>Access control patterns</strong> restrict who can access and execute certain functions of the smart contract. This way, you can manage permissions and authorizations for a given function, like giving only the admin the ability to do something. Examples of restricting access patterns include hash secret, access restriction, judge, embedded permission, dynamic binding, multi-authorization, ownership and role-based access control, and off-chain secret enabled dynamic authorization.</p></li><li><p><strong>Contract management patterns</strong> refer to how contract owners organize their smart contracts and how the contracts work together. This allows you to make sure your contracts work together smoothly. Examples of design patterns in the contract management pattern category include migration, data contract, contract decorator, inter-family communication, flyweight, contract registry, contract mediator, satellite, contract observer, and factory pattern.</p></li><li><p><strong>A factory pattern</strong> is a type of design pattern where one contract acts as the factory in charge of churning out other contracts. The products the pattern creates using Solidity code are called child contracts. Solidity smart contracts that use a factory pattern can benefit from increased efficiency as well as security. However, there are always exceptions with your unique code to keep in mind. The potential drawback of a factory pattern is that it can be more costly in gas depending on how you set up your code. </p></li></ol><p>In conclusion, smart contract design patterns are essential in the development of smart contracts. They provide tried-and-true coding paradigms that have performed routine functions well in other programs, avoiding errors, reducing costs, saving time, and preventing unintended consequences from occurring because of a new coding approach for a routine function.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="list-and-explain-any-two-use-cases-of-smart-contract">List and explain any two use cases of smart contract.<a class="hash-link" href="#list-and-explain-any-two-use-cases-of-smart-contract" title="Direct link to heading">​</a></h2><p>Smart contracts are an emerging technology that has the potential to revolutionize various industries. Two common use cases of smart contracts are <strong>DeFi</strong> and <strong>NFTs</strong>. DeFi platforms utilize smart contracts to provide financial services without the need for a middleman. Smart contracts enable sophisticated transactions such as lending, borrowing, and derivative transactions on DeFi platforms. NFTs are another popular use case of smart contracts. Smart contracts enable the creation of non-fungible tokens by allocating ownership and managing the transferability of NFTs. These contracts can also be modified to include additional features such as royalty payments and access rights to a platform or software.</p><p>In addition to these common use cases, smart contracts have various B2B use cases such as copyright management, data marketplaces, and financial data recording. Smart contracts can simplify and facilitate royalty payments and record the ownership and other aspects of digital copyright assets such as digital ID or fingerprints on the blockchain. Data marketplaces can enable buyers to purchase data streams through automated smart contracts. Organizations can use smart contracts for accurate, transparent data recording while improving speed and security. A smart contract enables uniform financial data-keeping across organizations which eliminates the need to exchange other documents such as invoice images. </p><p>Smart contracts also have industry-specific use cases such as gaming, healthcare, logistics, and real estate. In gaming, smart contracts are used to enable players to do common transactions such as buying and selling items and game-specific actions such as waging wars for loot, breeding characters, and so on. In healthcare, smart contracts are used for clinical trials and insurance processes. Smart contracts can speed up the process of property ownership changes and enable properties to be rented and listed on the Ethereum blockchain. Real estate ownership can be tokenized and sold like a real estate investment trust, and smart contracts can be written for real estate transactions so they provide rental income or dividends to the holders.</p><h1>Unit 2</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-ethereum-blockchain-platform-executes-the-transactions-explain-with-diagram">How Ethereum Blockchain Platform executes the transactions explain with diagram.<a class="hash-link" href="#how-ethereum-blockchain-platform-executes-the-transactions-explain-with-diagram" title="Direct link to heading">​</a></h2><p>The Ethereum Blockchain Platform executes transactions through a process that involves cryptographically signed instructions from accounts. Transactions are initiated by an externally-owned account, which is an account managed by a human, not a contract. The transaction is broadcasted to the whole network, and any node can request for the transaction to be executed on the Ethereum Virtual Machine (EVM). After this happens, a validator executes the transaction and propagates the resulting state change to the rest of the network. Transactions require a fee and must be included in a validated block. </p><p>A submitted transaction includes information such as the address of the sender, the receiving address, the identifier of the sender, a sequentially incrementing counter which indicates the transaction number from the account, the amount of ETH to transfer from sender to recipient, optional field to include arbitrary data, the maximum amount of gas units that can be consumed by the transaction, the maximum price of the consumed gas to be included as a tip to the validator, and the maximum fee per unit of gas willing to be paid for the transaction. </p><p>Gas is a reference to the computation required to process the transaction by a validator, and users have to pay a fee for this computation. The gasLimit and maxPriorityFeePerGas determine the maximum transaction fee paid to the validator. The vast majority of transactions access a contract from an externally-owned account, and most contracts are written in Solidity and interpret their data field in accordance with the application binary interface (ABI). </p><p>There are a few different types of transactions on Ethereum, including regular transactions, contract deployment transactions, and execution of a contract. Transactions cost gas to execute, and any gas not used in a transaction is refunded to the user account. Once the transaction has been submitted, a transaction hash is cryptographically generated, and the transaction is broadcasted to the network and added to a transaction pool consisting of all other pending network transactions. A validator must pick the transaction and include it in a block to verify the transaction and consider it "successful". </p><p>Ethereum originally had one format for transactions, but it has evolved to support multiple types of transactions to allow for new features such as access lists and EIP-1559 to be implemented without affecting legacy transaction formats. EIP-2718 is what allows for this behavior, and transactions are interpreted as TransactionType || TransactionPayload, where the fields are defined as TransactionType - a number between 0 and 0x7f, for a total of 128 possible transaction types, and TransactionPayload - an arbitrary byte array defined by the transaction type. </p><p>Diagram showing a transaction cause state change: </p><p><img loading="lazy" src="https://ethereum.org/static/570dedb843948d6bef5e21a6769d5c35/302a4/tx.png" alt="Diagram showing a transaction cause state change" class="img_ev3q"></p><p>Diagram showing how unused gas is refunded: </p><p><img loading="lazy" src="https://ethereum.org/static/c3638b26a1210d2c73a7ec2335c57351/302a4/gas-tx.png" alt="Diagram showing how unused gas is refunded" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="compare-ethereum-blockchain-with-bitcoin">Compare Ethereum Blockchain with Bitcoin.<a class="hash-link" href="#compare-ethereum-blockchain-with-bitcoin" title="Direct link to heading">​</a></h2><table><thead><tr><th>Comparison Factor</th><th>Bitcoin</th><th>Ethereum</th></tr></thead><tbody><tr><td>Purpose</td><td>Alternative to traditional currencies, medium of exchange and store of value</td><td>Programmable blockchain for DeFi, smart contracts, and NFTs</td></tr><tr><td>Market Capitalization (as of Aug. 30, 2022)</td><td>$376.5 billion, accounting for about 39.6% of the total cryptocurrency market</td><td>$818.8 billion, accounting for 18.8% of the total cryptocurrency market</td></tr><tr><td>Consensus Algorithm</td><td>SHA-256</td><td>LMDGhost</td></tr><tr><td>Block Time</td><td>Minutes</td><td>Seconds</td></tr><tr><td>Proof Protocol</td><td>Proof of Work (PoW)</td><td>Proof of Stake (PoS)</td></tr><tr><td>Cryptocurrency in Circulation (as of Aug. 30, 2022)</td><td>19.1 BTC</td><td>122.2 ETH</td></tr><tr><td>Similarities</td><td>Decentralized, traded on online exchanges, stored in cryptocurrency wallets, use blockchain technology</td><td></td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="list-and-elaborate-different-ethereum-development-tools">List and elaborate different Ethereum Development Tools.<a class="hash-link" href="#list-and-elaborate-different-ethereum-development-tools" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-are-ethereums-four-stages-of-development">What are Ethereum's Four Stages of Development?<a class="hash-link" href="#what-are-ethereums-four-stages-of-development" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="list-and-explain-various-languages-used-to-build-smart-contracts">List and explain various languages used to build smart contracts?<a class="hash-link" href="#list-and-explain-various-languages-used-to-build-smart-contracts" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-are-different-ethereum-wallets-elaborate-each-with-its-features">What are different Ethereum Wallets? Elaborate each with its features.<a class="hash-link" href="#what-are-different-ethereum-wallets-elaborate-each-with-its-features" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="categorize-the-different-ethereum-accounts-illustrate-each-type-of-account">Categorize the different Ethereum accounts. Illustrate each type of account.<a class="hash-link" href="#categorize-the-different-ethereum-accounts-illustrate-each-type-of-account" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="define-1-public-networks-ii-ethereum-mainnet-ii-ehtereum-testrets">Define (1) public networks (ii) Ethereum Mainnet (ii) Ehtereum Testrets.<a class="hash-link" href="#define-1-public-networks-ii-ethereum-mainnet-ii-ehtereum-testrets" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-consensus-algorithm-why-is-it-necessary-in-a-public-blockchain">What is Consensus Algorithm, Why is it necessary in a Public Blockchain?<a class="hash-link" href="#what-is-consensus-algorithm-why-is-it-necessary-in-a-public-blockchain" title="Direct link to heading">​</a></h2><h1>Unit 3</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="elaborate-the-term-distributed-ledger">Elaborate the term Distributed Ledger.<a class="hash-link" href="#elaborate-the-term-distributed-ledger" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-cryptocurrency-give-the-different-examples-of-cryptocurrency">What is cryptocurrency give the different examples of cryptocurrency<a class="hash-link" href="#what-is-cryptocurrency-give-the-different-examples-of-cryptocurrency" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="justify-the-pros-and-cons-of-cryptocurrency">Justify the pros and cons of cryptocurrency.<a class="hash-link" href="#justify-the-pros-and-cons-of-cryptocurrency" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-mining-how-does-it-work-in-bitcoin">What is Mining? How does it work in Bitcoin?<a class="hash-link" href="#what-is-mining-how-does-it-work-in-bitcoin" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-are-different-bitcoin-protocols">What are different Bitcoin protocols?<a class="hash-link" href="#what-are-different-bitcoin-protocols" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-did-mining-evolve-explain-about-different-phases-of-bitcoin-mining-with-hardware-used-at-each-stage">How did Mining Evolve? Explain about different Phases of Bitcoin Mining with Hardware used at each Stage.<a class="hash-link" href="#how-did-mining-evolve-explain-about-different-phases-of-bitcoin-mining-with-hardware-used-at-each-stage" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-dao-illustrate-it-with-example">What is DAO. Illustrate it with example.<a class="hash-link" href="#what-is-dao-illustrate-it-with-example" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="illustrate-nft-give-the-difference-between-nft-and-fungible-token">Illustrate NFT. Give the difference between NFT and fungible token.<a class="hash-link" href="#illustrate-nft-give-the-difference-between-nft-and-fungible-token" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-ghost-protocol-for-ethereum">What is GHOST Protocol For Ethereum?<a class="hash-link" href="#what-is-ghost-protocol-for-ethereum" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="list-the-various-vulnerabilities-in-blockchain-network">List the various vulnerabilities in blockchain network.<a class="hash-link" href="#list-the-various-vulnerabilities-in-blockchain-network" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="list-the-various-attacks--in-blockchain-network">List the various attacks  in blockchain network.<a class="hash-link" href="#list-the-various-attacks--in-blockchain-network" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="write-short-note-on">Write short note on<a class="hash-link" href="#write-short-note-on" title="Direct link to heading">​</a></h2><ol><li>Side chain</li><li>Name coin</li></ol><h1>Unit 4</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="elabrate-the-legal-aspects-crypto-currency-exchange">Elabrate the Legal Aspects-Crypto currency Exchange.<a class="hash-link" href="#elabrate-the-legal-aspects-crypto-currency-exchange" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-crowdfunding-and-how-blockchain-technology-can-be-used-for-it">What is crowdfunding and how Blockchain Technology can be used for it?<a class="hash-link" href="#what-is-crowdfunding-and-how-blockchain-technology-can-be-used-for-it" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="write-short-note-on-black-market-and-global-economy">Write short note on 'Black Market and Global Economy'.<a class="hash-link" href="#write-short-note-on-black-market-and-global-economy" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-blockchain-and-iot-can-work-together">How blockchain and IOT can work together?<a class="hash-link" href="#how-blockchain-and-iot-can-work-together" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-blockchain-technology-can-be-useful-for-storing-electronic-medical-record-give-any-example-of-it">How blockchain Technology can be useful for storing electronic medical record? give any example of it.<a class="hash-link" href="#how-blockchain-technology-can-be-useful-for-storing-electronic-medical-record-give-any-example-of-it" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="write-short-note-on-1">Write short note on<a class="hash-link" href="#write-short-note-on-1" title="Direct link to heading">​</a></h2><ol><li>'Future of Blockchain for crypto currencies'   </li><li>Blockchain Domain Name Service  </li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-fork-what-are-different-types-of-forks">What is a Fork? What are different types of Forks?<a class="hash-link" href="#what-is-a-fork-what-are-different-types-of-forks" title="Direct link to heading">​</a></h2><h1>Unit 5</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="write-a-short-notes-on-history-of-crypto-currency">Write a short notes on history of crypto currency.<a class="hash-link" href="#write-a-short-notes-on-history-of-crypto-currency" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="state-advantages-and-disadvantages-of-flat-currency">State advantages and disadvantages of flat Currency.<a class="hash-link" href="#state-advantages-and-disadvantages-of-flat-currency" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="justify-the-role-of-digital-signature-in-cryprocurrency">Justify the role of Digital Signature in cryprocurrency.<a class="hash-link" href="#justify-the-role-of-digital-signature-in-cryprocurrency" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="define-1-digital-keys2-private-keys3-public-keys---4-cryptowallet">Define 	1. Digital Keys	2. Private Keys	3. Public Keys   4. Cryptowallet<a class="hash-link" href="#define-1-digital-keys2-private-keys3-public-keys---4-cryptowallet" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="describe-the-flow-of-bitcoin--transactions">Describe the flow of Bitcoin  transactions.<a class="hash-link" href="#describe-the-flow-of-bitcoin--transactions" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-the-bitcoin-network-works-explain-it-with-diagram">How the Bitcoin network works explain it with diagram<a class="hash-link" href="#how-the-bitcoin-network-works-explain-it-with-diagram" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="write-short-note-on-bitcoins-clients-and-apis">Write short note on Bitcoins Clients and APIs<a class="hash-link" href="#write-short-note-on-bitcoins-clients-and-apis" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="categorise-different-bitcoins-wallets-and-payments">Categorise different Bitcoins Wallets and payments.<a class="hash-link" href="#categorise-different-bitcoins-wallets-and-payments" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-are-the-limitations-of-bitcoin">What are the limitations of Bitcoin.<a class="hash-link" href="#what-are-the-limitations-of-bitcoin" title="Direct link to heading">​</a></h2><h1>Unit 6</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-the-ibm-blockchain-technology-works-explain-with-diagram">How the IBM Blockchain technology works explain with diagram.<a class="hash-link" href="#how-the-ibm-blockchain-technology-works-explain-with-diagram" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="justify-the-importance-of-blockchain-technology-in-health-care-innovation">Justify the importance of Blockchain Technology in Health care Innovation.<a class="hash-link" href="#justify-the-importance-of-blockchain-technology-in-health-care-innovation" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="write-short-on-following-use-case-of-blockchain">Write short on following use case of Blockchain<a class="hash-link" href="#write-short-on-following-use-case-of-blockchain" title="Direct link to heading">​</a></h2><ol><li>Investment Management Platforms      </li><li>Justify the importance AI in Blockchain Technology</li></ol>]]></content:encoded>
            <category>ethereum</category>
            <category>blockchain</category>
            <category>smart-contract</category>
            <category>course</category>
            <category>crypto-currency</category>
        </item>
        <item>
            <title><![CDATA[232. Implement Queue using Stacks]]></title>
            <link>https://jhasuraj.com/blog/leetcode/implement-queue-using-stacks</link>
            <guid>leetcode/implement-queue-using-stacks</guid>
            <pubDate>Fri, 16 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Problem Statement]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="problem-statement">Problem Statement<a class="hash-link" href="#problem-statement" title="Direct link to heading">​</a></h2><p>Implement a first in first out (FIFO) queue using only two stacks.
The implemented queue should support all the functions of a normal
queue (<code>push</code>, <code>peek</code>, <code>pop</code>, and <code>empty</code>).</p><p>Implement the <code>MyQueue</code> class:</p><p><code>void push(int x)</code> Pushes element x to the back of the queue.
<code>int pop()</code> Removes the element from the front of the queue and returns it.
<code>int peek()</code> Returns the element at the front of the queue.
<code>boolean empty()</code> Returns <code>true</code> if the queue is empty, <code>false</code> otherwise.</p><p><strong>Notes:</strong></p><ul><li>You must use only standard operations of a stack, which means only <code>push to top</code>,
<code>peek/pop from top</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li><li>Depending on your language, the stack may not be supported natively. You may
simulate a stack using a list or deque (double-ended queue) as long as you use
only a stack's standard operations.</li></ul><p>Example 1:</p><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Input:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">["MyQueue", "push", "push", "peek", "pop", "empty"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[[], [1], [2], [], [], []]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Output:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[null, null, null, 1, 1, false]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Explanation:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MyQueue myQueue = new MyQueue();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">myQueue.push(1); // queue is: [1]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">myQueue.push(2); // queue is: [1, 2] (leftmost is front of the queue)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">myQueue.peek(); // return 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">myQueue.pop(); // return 1, queue is [2]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">myQueue.empty(); // return false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Constraints:</p><ul><li><code>1 &lt;= x &lt;= 9</code></li><li>At most <code>100</code> calls will be made to <code>push</code>, <code>pop</code>, <code>peek</code>, and <code>empty</code>.</li><li>All the calls to <code>pop</code> and <code>peek</code> are valid.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="follow-up">Follow Up<a class="hash-link" href="#follow-up" title="Direct link to heading">​</a></h2><p>Can you implement the queue such that each operation is <a href="https://en.wikipedia.org/wiki/Amortized_analysis" target="_blank" rel="noopener noreferrer">amortized</a>
<code>O(1)</code> time complexity? In other words, performing <code>n</code> operations will take
overall <code>O(n)</code> time even if one of those operations may take longer.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="explanation">Explanation<a class="hash-link" href="#explanation" title="Direct link to heading">​</a></h2><p>Properties of Queue:</p><p>Properties of Stack:</p><p>Inorder to create queue using stack, we can use combination of 2 stacks (say <code>stack1</code>, <code>stack2</code>);</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="queue-push">Queue: Push<a class="hash-link" href="#queue-push" title="Direct link to heading">​</a></h3><ul><li>push new element to <code>stack1</code></li><li>oldest element pushed will be in the bottom of stack</li><li>newest element pushed will be on the top of stack</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="queue-peek">Queue: Peek<a class="hash-link" href="#queue-peek" title="Direct link to heading">​</a></h3><ul><li>IF <code>stack2</code> is empty then oldest element will be at the
bottom of <code>stack1</code> else oldest element will be on top of <code>stack2</code></li></ul><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">IF stack2 is empty</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    WHILE stack1 is not empty</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pop element from stack1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        push element into stack2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>Now, oldest element will always be on the top of <code>stack2</code></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="queue-pop">Queue: Pop<a class="hash-link" href="#queue-pop" title="Direct link to heading">​</a></h3><ul><li>same as finding the peek, then just pop peek element from <code>stack2</code>.</li><li>after, pop operation on <code>stack2</code>, 2nd oldest will again come on top of <code>stack2</code>.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="solution">Solution<a class="hash-link" href="#solution" title="Direct link to heading">​</a></h2><div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">C++ Two User Stack</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">C++ Solution using Two User Defined Stack</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MyQueue</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    stack</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">MyQueue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">empty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">empty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">top</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> ans </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">top</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> ans</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">peek</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">empty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">while</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">empty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">top</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">top</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">bool</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">empty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * Your MyQueue object will be instantiated and called as such:</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * MyQueue* obj = new MyQueue();</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * obj-&gt;push(x);</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * int param_2 = obj-&gt;pop();</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * int param_3 = obj-&gt;peek();</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * bool param_4 = obj-&gt;empty();</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Time Complexity:</p><ul><li>Push: O(1)</li><li>Pop: O(N), amortized: O(1)</li><li>Peek: O(N), amortized: O(1)</li></ul><p>Space Complexity: O(N)</p></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="related-problems">Related Problems<a class="hash-link" href="#related-problems" title="Direct link to heading">​</a></h2><ul><li><a href="https://www.geeksforgeeks.org/implement-stack-using-queue/" target="_blank" rel="noopener noreferrer">Implement Stack using Queues - GeeksforGeeks</a></li><li><a href="https://leetcode.com/problems/implement-stack-using-queues/" target="_blank" rel="noopener noreferrer">225. Implement Stack using Queues - LeetCode</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a class="hash-link" href="#references" title="Direct link to heading">​</a></h2><ul><li><a href="https://www.geeksforgeeks.org/queue-using-stacks/" target="_blank" rel="noopener noreferrer">Queue using Stacks - GeeksforGeeks</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="links">Links<a class="hash-link" href="#links" title="Direct link to heading">​</a></h2><ul><li><a href="https://leetcode.com/problems/implement-queue-using-stacks/" target="_blank" rel="noopener noreferrer">232. Implement Queue using Stacks</a></li><li><a href="https://leetcode.com/problems/implement-queue-using-stacks/solutions/2918885/c-solution-using-two-user-defined-stack-time-o-1-space-o-n/" target="_blank" rel="noopener noreferrer">LeetCode Discussion Post - Suraj Jha</a></li></ul>]]></content:encoded>
            <category>LeetCode</category>
            <category>Leetcode Daily</category>
            <category>DSA</category>
            <category>Stack</category>
            <category>Queue</category>
        </item>
        <item>
            <title><![CDATA[1143. Longest Common Subsequence, LeetCode]]></title>
            <link>https://jhasuraj.com/blog/leetcode/longest-common-subsequence</link>
            <guid>leetcode/longest-common-subsequence</guid>
            <pubDate>Thu, 15 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Problem Statement]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="problem-statement">Problem Statement<a class="hash-link" href="#problem-statement" title="Direct link to heading">​</a></h2><p>Given two strings <code>text1</code> and <code>text2</code>, return the length of their <em>longest common subsequence</em>. If there is no common subsequence, return <code>0</code>.</p><p>A <em>subsequence</em> of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.</p><ul><li>For example, <code>"ace"</code> is a subsequence of <code>"abcde"</code>.</li></ul><p>A <em>common subsequence</em> of two strings is a subsequence that is common to both strings. </p><p>Example 1:</p><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Input: text1 = "abcde", text2 = "ace" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Output: 3  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Explanation: The longest common subsequence is "ace" and its length is 3.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Example 2:</p><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Input: text1 = "abc", text2 = "abc"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Output: 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Explanation: The longest common subsequence is "abc" and its length is 3.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Example 3:</p><div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Input: text1 = "abc", text2 = "def"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Output: 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Explanation: There is no such common subsequence, so the result is 0.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Constraints:</p><ul><li><code>1 &lt;= text1.length, text2.length &lt;= 1000</code></li><li><code>text1</code> and <code>text2</code> consist of only lowercase English characters.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="explanation">Explanation<a class="hash-link" href="#explanation" title="Direct link to heading">​</a></h2><p>Let <code>i1</code> and <code>i2</code> be two pointer pointing at <code>current</code> index in string <code>s1</code> and <code>s2</code> respectively.</p><p>let <code>dp(i1, i2, s1, s2)</code> denotes the length of longest common subsequence in string <code>s1[i1...n1]</code> and <code>s2[i2...n2]</code>.</p><p>If <em>i1 == n1</em>, implies s1<!-- -->[i1....n1]<!-- --> is empty.</p><p><strong>Base Case:</strong> longest common subsequence of any string with empty string is 0.
Therefore is any of <em>i1 == n1</em> or <em>i2 == n2</em> return <code>0</code>.</p><p>Now, for any <code>i1</code> and <code>i2</code> there are 2 possibilities.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="solution">Solution<a class="hash-link" href="#solution" title="Direct link to heading">​</a></h2><div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">C++ Recursive</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">C++ Recursive DP</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">CPP: Recursive Brute Force Solution [Time Limit Exceeded]</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Solution</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> string </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> string </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">s2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> n1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> n2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Base Case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1 </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> n1 </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> i2 </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> n2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">longestCommonSubsequence</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">string text1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> string text2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> text1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> text2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><table><thead><tr><th>m</th><th>n</th><th>Time Complexity</th><th>Space Complexity</th></tr></thead><tbody><tr><td>size of string 1</td><td>size of string 2</td><td>O(max(m,n)<!-- -->*<!-- -->m<!-- -->*<!-- -->n)</td><td>O(max(m,n))</td></tr></tbody></table></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">CPP: Recursive + Memoization [Accepted]</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Solution</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">private</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> string </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> string </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">s2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">cache</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> n1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> n2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Base Case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1 </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> n1 </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> i2 </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> n2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cache</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i1</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">longestCommonSubsequence</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">string text1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> string text2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">cache</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">text1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">vector</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name keyword" style="color:#00009f">int</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">text2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">dp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> text1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> text2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><table><thead><tr><th>m</th><th>n</th><th>Time Complexity</th><th>Space Complexity</th></tr></thead><tbody><tr><td>size of string 1</td><td>size of string 2</td><td>O(m*n)</td><td>O(m*n)</td></tr></tbody></table></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="related-problems">Related Problems<a class="hash-link" href="#related-problems" title="Direct link to heading">​</a></h2><ul><li><a href="https://leetcode.com/discuss/interview-question/1273766/longest-common-substring" target="_blank" rel="noopener noreferrer">Longest Common Substring</a></li><li><a href="https://leetcode.com/problems/shortest-common-supersequence/" target="_blank" rel="noopener noreferrer">1092. Shortest Common Supersequence</a></li><li><a href="https://leetcode.com/problems/longest-repeating-substring/" target="_blank" rel="noopener noreferrer">1062. Longest Repeating Substring</a></li><li><a href="https://leetcode.com/problems/longest-palindromic-subsequence/" target="_blank" rel="noopener noreferrer">516. Longest Palindromic Subsequence</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a class="hash-link" href="#references" title="Direct link to heading">​</a></h2><ul><li><a href="https://youtu.be/4Urd0a0BNng" target="_blank" rel="noopener noreferrer">Longest common subsequence Recursive - YouTube, Aditya Verma</a></li><li><a href="https://youtu.be/NnD96abizww" target="_blank" rel="noopener noreferrer">Longest common subsequence Tabular - YouTube, Tushar Roy</a></li></ul>]]></content:encoded>
            <category>LeetCode</category>
            <category>Leetcode Daily</category>
            <category>DSA</category>
            <category>Dynamic Programming</category>
            <category>String</category>
        </item>
        <item>
            <title><![CDATA[Change SSH Port in Linux CentOS (Oracle Linux 8)]]></title>
            <link>https://jhasuraj.com/blog/change-ssh-port-in-linux-centos</link>
            <guid>change-ssh-port-in-linux-centos</guid>
            <pubDate>Thu, 08 Dec 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[On Linux systems, the default SSH port is 22. There are a few reasons]]></description>
            <content:encoded><![CDATA[<p>On Linux systems, the default SSH port is 22. There are a few reasons
why you might want to change this number. This article will walk you
through the process of changing the default ssh port 22 to 8080.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisite">Prerequisite<a class="hash-link" href="#prerequisite" title="Direct link to heading">​</a></h2><ul><li>If you are using oracle cloud, open port 8080 in Oracle Cloud Security list for SSH Access.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="setup-vm-firewall">Setup VM Firewall<a class="hash-link" href="#setup-vm-firewall" title="Direct link to heading">​</a></h2><p>Check firewall state</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> firewall-cmd --state</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Login as root user</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">su</span><span class="token plain"> root</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Update Port 22 to 8080</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">vi</span><span class="token plain"> /usr/lib/firewalld/services/ssh.xml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-output codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">~/usr/lib/firewalld/services/ssh.xml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-output codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;service&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;short&gt;SSH&lt;/short&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &lt;description&gt;Secure Shell (SSH) is a protocol ... to be useful.&lt;/description&gt;</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  &lt;port protocol="tcp" port="8080"/&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/service&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Reload firewall and network</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">firewall-cmd --reload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl restart network</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">systemctl reload firewalld</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ssh-configuration">SSH Configuration<a class="hash-link" href="#ssh-configuration" title="Direct link to heading">​</a></h2><p>Set port 8080 as ssh port</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">semanage port -m -t ssh_port_t -p tcp </span><span class="token number" style="color:#36acaa">8080</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Solve the error <code>semanage: command not found</code> and retry above command</summary><div><div class="collapsibleContent_i85q"><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Check your linux distribution</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> /etc/os-release </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">grep</span><span class="token plain"> -E -i </span><span class="token string" style="color:#e3116c">'Fedora|Debian|CentOS'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">Debian</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Fedora</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">CentOS</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Install semanage via apt</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">apt-get</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> policycoreutils-python-utils</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Install semanage via dnf</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">dnf </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> policycoreutils-python-utils</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Install semanage via yum</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yum </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> policycoreutils-python</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div></div></div></details><p>Update ssh port 22 to 8080</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">vi</span><span class="token plain"> /etc/ssh/sshd_config</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-output codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">~/etc/ssh/sshd_config</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-output codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># If you want to change the port on a SELinux system, you have to tell</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># SELinux about this change.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># semanage port -a -t ssh_port_t -p tcp #PORTNUMBER</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">Port 8080</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#AddressFamily any</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#ListenAddress 0.0.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#ListenAddress ::</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">HostKey /etc/ssh/ssh_host_rsa_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Restart ssh daemon</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">systemctl restart sshd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="testing">Testing<a class="hash-link" href="#testing" title="Direct link to heading">​</a></h2><p>Open another terminal and try to ssh through new port</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">ssh</span><span class="token plain"> -i </span><span class="token string" style="color:#e3116c">"PATH_TO_SSH_KEY"</span><span class="token plain"> -p </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"> USERNAME@IP_ADDRESS -p </span><span class="token number" style="color:#36acaa">8080</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a class="hash-link" href="#references" title="Direct link to heading">​</a></h2><ul><li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-firewalld-on-centos-7" target="_blank" rel="noopener noreferrer">How to set up a firewall using firewalld on centos 7</a></li><li><a href="https://www.ionos.com/help/server-cloud-infrastructure/getting-started/important-security-information-for-your-server/changing-the-default-ssh-port/" target="_blank" rel="noopener noreferrer">Changing the default ssh port</a></li><li><a href="https://serverfault.com/questions/834195/ssh-fails-after-port-change-on-centos-7" target="_blank" rel="noopener noreferrer">SSH fails after port change on centos 7</a></li><li><a href="https://serverfault.com/questions/790404/selinux-error-valueerror-port-tcp-5000-already-defined" target="_blank" rel="noopener noreferrer">Selinux error valueerror port tcp 5000 already defined</a></li><li><a href="https://www.thegeekdiary.com/semanage-command-not-found/" target="_blank" rel="noopener noreferrer">semanage: command not found</a></li></ul>]]></content:encoded>
            <category>linux</category>
            <category>ssh</category>
            <category>firewalld</category>
            <category>semanage</category>
        </item>
        <item>
            <title><![CDATA[Ethereum Blockchain local environment setup using Ganache and truffle]]></title>
            <link>https://jhasuraj.com/blog/ethereum-blockchain-local-environment</link>
            <guid>ethereum-blockchain-local-environment</guid>
            <pubDate>Thu, 29 Sep 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Setting up your dev environment for Ethereum development takes just a few minutes. In this article you will learn about Deploying and Operating Simple Smart Contract on local blockchain network using Ganache and truffle.]]></description>
            <content:encoded><![CDATA[<p>Setting up your dev environment for Ethereum development takes just a few minutes. In this article you will learn about Deploying and Operating Simple Smart Contract on local blockchain network using Ganache and truffle.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a class="hash-link" href="#prerequisites" title="Direct link to heading">​</a></h2><ol><li>Download and install the latest <code>node</code> and <code>npm</code> from <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener noreferrer">https://nodejs.org/en/download/</a></li><li>Download and install Visual Studio Code from <a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">https://code.visualstudio.com/</a></li><li>Download and install <code>Ganache</code> from <a href="https://trufflesuite.com/ganache/" target="_blank" rel="noopener noreferrer">https://trufflesuite.com/ganache/</a></li><li>Install <code>Truffle</code><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> truffle -g</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="initialize-project">Initialize Project<a class="hash-link" href="#initialize-project" title="Direct link to heading">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">truffle init my-bank</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output:</p><div class="language-output codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-output codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Starting init...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Copying project files to my-bank</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Init successful, sweet!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Try our scaffold commands to get started:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  $ truffle create contract YourContractName # scaffold a contract</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  $ truffle create test YourTestName         # scaffold a test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">http://trufflesuite.com/docs/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Uncomment the following lines in <code>truffle-config.js</code> and update the <code>host</code>, <code>port</code> and <code>network_id</code> as given below.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">truffle-config.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// tab if you use this network and you must also set the `host`, `port` and `network_id`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// options below to some value.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain"></span><span class="token literal-property property" style="color:#36acaa">development</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">host</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"127.0.0.1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">     </span><span class="token comment" style="color:#999988;font-style:italic">// Localhost (default: none)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">port</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8545</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// Standard Ethereum port (default: none)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">network_id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"*"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">// Any network (default: none)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// An additional network, but with some advanced options…</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token spread operator" style="color:#393A34">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="writing-smart-contract">Writing Smart Contract<a class="hash-link" href="#writing-smart-contract" title="Direct link to heading">​</a></h2><p>Create two new files <code>Bank.sol</code> and <code>1_bank.js</code> in the <code>contracts</code> and <code>migrations</code> directory respectively as shown below.</p><div class="language-output codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-output codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">├─build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ └─contracts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├─contracts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ └─ Bank.sol (+)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├─migrations</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│ └─ 1_bank.js (+)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└─test</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sol codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">contracts/Bank.sol</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sol codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// SPDX-License-Identifier: MIT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">pragma</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">solidity</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">^</span><span class="token version number" style="color:#36acaa">0.8.17</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">contract</span><span class="token plain"> </span><span class="token class-name">Bank</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">uint256</span><span class="token plain"> balance</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        balance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * @dev Add value in variable</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * @param amount value to deposit</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">deposit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> amount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">amount </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            balance </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> amount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">withdraw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> amount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">amount </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            balance </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> amount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * @dev Return balance </span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     * @return value of 'number'</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">check_balance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">view</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">returns</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> balance</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">migrations/1_bank.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">Bank</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Bank"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">exports</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">deployer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    deployer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deploy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">Bank</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ganache-setup">Ganache Setup<a class="hash-link" href="#ganache-setup" title="Direct link to heading">​</a></h2><ol><li>Launch Ganache and Create a new <em>ETHEREUM WORKSPACE.</em><img loading="lazy" src="https://t43259681.p.clickup-attachments.com/t43259681/2cf5b19b-4516-469d-83ec-bb40dbe94fac/image.png" class="img_ev3q"></li><li>Rename your Workspace to <code>My Bank</code> and click on <em>Add Project</em><img loading="lazy" src="https://t43259681.p.clickup-attachments.com/t43259681/1ebbf941-0910-409e-9f83-8d30e6bcc2a9/image.png" class="img_ev3q"></li><li>Navigate to your project folder and select <code>truffle-config.js</code> and click <em>Open</em> <img loading="lazy" src="https://t43259681.p.clickup-attachments.com/t43259681/c91edbb3-4bf6-42a1-8cee-e7195d9e2c98/image.png" class="img_ev3q"></li><li>Click on <em>Server,</em> update the port to <code>8545</code> then click on <em>Save Workspace.</em><img loading="lazy" src="https://t43259681.p.clickup-attachments.com/t43259681/5724c603-6bea-470b-bca8-2396f34c172b/image.png" class="img_ev3q"></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="compiling-and-deploying">Compiling and Deploying<a class="hash-link" href="#compiling-and-deploying" title="Direct link to heading">​</a></h2><p>Open Terminal and <code>cd</code> to your project directory<img loading="lazy" src="https://t43259681.p.clickup-attachments.com/t43259681/23a3f7c5-e87c-4d7a-b0ee-ce3cb6ccfca2/image.png" class="img_ev3q"></p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npx truffle migrate</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output:</p><div class="language-output codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-output codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Compiling your contracts...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">===========================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Compiling .\contracts\Bank.sol</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Artifacts written to E:\Personal Projects\blockchain\my-bank\build\contracts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Compiled successfully using:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   - solc: 0.8.17+commit.8df45f5f.Emscripten.clang</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Starting migrations...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">======================</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Network name:    'development'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Network id:      5777</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Block gas limit: 6721975 (0x6691b7)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1_bank.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">=========</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Deploying 'Bank'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   ----------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; transaction hash:    0xaa6f43b40c85d646c475e940fe1869fb37876620c726c394a25b6962e28eca9b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; Blocks: 0            Seconds: 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; contract address:    0x5724576138328Ebe1A163b4c756038Fe6C0698E4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; block number:        1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; block timestamp:     1664260108</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; account:             0x7b17D239FA8d011FF19fC20efE4aD2E5541839b7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; balance:             99.9963793</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; gas used:            181035 (0x2c32b)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; gas price:           20 gwei</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; value sent:          0 ETH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; total cost:          0.0036207 ETH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; Saving artifacts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   -------------------------------------</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   &gt; Total cost:           0.0036207 ETH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Summary</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">=======</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Total deployments:   1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Final cost:          0.0036207 ETH</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Wow! You have just deployed your first smart contract! To verify go to Ganache, navigate to <em>Contracts</em> there you will find your first contract <code>Bank</code><img loading="lazy" src="https://t43259681.p.clickup-attachments.com/t43259681/bc7da2eb-c66c-446f-91fd-4cf08245dbe9/image.png" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="accessing-deployed-smart-contract">Accessing Deployed Smart Contract<a class="hash-link" href="#accessing-deployed-smart-contract" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="enter-truffle-console">Enter <em>truffle console</em><a class="hash-link" href="#enter-truffle-console" title="Direct link to heading">​</a></h3><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npx truffle console</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output:</p><div class="language-output codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-output codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">truffle(development)&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="check-the-current-balance">Check the current balance<a class="hash-link" href="#check-the-current-balance" title="Direct link to heading">​</a></h3><p>To call the <code>check_balance()</code> function in the smart contract, write the following code in the truffle console.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">truffle(development)&gt;</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token maybe-class-name">Bank</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">instance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">check_balance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output:</p><div class="language-output codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-output codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">BN { negative: 0, words: [ 0, &lt;1 empty item&gt; ], length: 1, red: null }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="deposit-the-amount">Deposit the amount<a class="hash-link" href="#deposit-the-amount" title="Direct link to heading">​</a></h3><p>To call the <code>deposit()</code> function in the smart contract, write the following code in the truffle console.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">truffle(development)&gt;</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token maybe-class-name">Bank</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">instance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deposit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output:</p><div class="language-output codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-output codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tx: '0xfb2f8b4caa8cdb656237dcb7d5793e75d73988d6942e6b8df243408f0fae4e56',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  receipt: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    transactionHash: '0xfb2f8b4caa8cdb656237dcb7d5793e75d73988d6942e6b8df243408f0fae4e56',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    transactionIndex: 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    blockHash: '0xc02d65d946cdde8e3a13f0660af0c109becffefc030dff27f2bf379387f6c9c1',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    blockNumber: 3,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    from: '0x7b17d239fa8d011ff19fc20efe4ad2e5541839b7',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    to: '0x5724576138328ebe1a163b4c756038fe6c0698e4',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gasUsed: 27673,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cumulativeGasUsed: 27673,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    contractAddress: null,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logs: [],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    status: true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rawLogs: []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  logs: []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="withdraw-the-amount">Withdraw the amount<a class="hash-link" href="#withdraw-the-amount" title="Direct link to heading">​</a></h3><p>To call the <code>withdraw()</code> function in the smart contract, write the following code in the truffle console.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">truffle(development)&gt;</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token maybe-class-name">Bank</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deployed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">instance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">withdraw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output:</p><div class="language-output codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-output codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tx: '0xfbd8c0374ed5f6b800feabb24d9c0d921544f270deb83822be3537c3b3059782',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  receipt: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    transactionHash: '0xfbd8c0374ed5f6b800feabb24d9c0d921544f270deb83822be3537c3b3059782',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    transactionIndex: 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    blockHash: '0x3e729c7336d7ad36048191cd08006163be53acd58d49f6aafbe57b1bef0b2ffb',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    blockNumber: 4,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    from: '0x7b17d239fa8d011ff19fc20efe4ad2e5541839b7',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    to: '0x5724576138328ebe1a163b4c756038fe6c0698e4',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gasUsed: 27629,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cumulativeGasUsed: 27629,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    contractAddress: null,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logs: [],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    status: true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rawLogs: []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  logs: []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="verify-all-the-transactions-in-ganache">Verify all the transactions in Ganache<a class="hash-link" href="#verify-all-the-transactions-in-ganache" title="Direct link to heading">​</a></h3><ol><li>Check the number of Blocks Created in the <em>BLOCKS</em> Section of Ganache</li><li>Verify all the transactions performed by you in the <em>TRANSACTIONS</em> Section of Ganache.</li><li>Check the ETH balance of your temporary account in the <em>ACCOUNTS</em> Section of Ganache.</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a class="hash-link" href="#references" title="Direct link to heading">​</a></h2><ul><li><a href="https://trufflesuite.com/docs/truffle/quickstart/" target="_blank" rel="noopener noreferrer">Truffle quickstart</a></li></ul>]]></content:encoded>
            <category>ethereum</category>
            <category>blockchain</category>
            <category>smart-contract</category>
            <category>dapp</category>
            <category>ganache</category>
            <category>truffle</category>
            <category>solidity</category>
        </item>
    </channel>
</rss>