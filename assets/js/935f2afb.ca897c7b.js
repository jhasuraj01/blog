"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"dataStructures":[{"type":"link","label":"Introduction to Data Structures","href":"/blog/data-structures/intro","docId":"data-structures/intro"},{"type":"category","label":"Graph Theory","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Connected Components","href":"/blog/data-structures/graph/connected-components","docId":"data-structures/graph/connected-components"},{"type":"link","label":"Bipartite Graph","href":"/blog/data-structures/graph/bipartite","docId":"data-structures/graph/bipartite"},{"type":"category","label":"Bipartite Graph","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Possible Bipartition","href":"/blog/data-structures/graph/bipartite-graph/possible_bipartition","docId":"data-structures/graph/bipartite-graph/possible_bipartition"}],"href":"/blog/data-structures/graph/bipartite-graph/"}],"href":"/blog/data-structures/graph/"}],"algorithms":[{"type":"link","label":"Introduction to Algorithms","href":"/blog/algorithms/intro","docId":"algorithms/intro"},{"type":"category","label":"Kadane\'s Algorithm","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Flip Bits","href":"/blog/algorithms/kadanes-algorithm/flip-bits","docId":"algorithms/kadanes-algorithm/flip-bits"},{"type":"link","label":"Maximum Subarray Sum","href":"/blog/algorithms/kadanes-algorithm/maximum-subarray-sum","docId":"algorithms/kadanes-algorithm/maximum-subarray-sum"}],"href":"/blog/algorithms/kadanes-algorithm/"},{"type":"link","label":"Monotonic Stack","href":"/blog/algorithms/monotonic-stack/","docId":"algorithms/monotonic-stack/index"}],"sidebar":[{"type":"category","label":"Data Structures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to Data Structures","href":"/blog/data-structures/intro","docId":"data-structures/intro"},{"type":"category","label":"Graph Theory","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Connected Components","href":"/blog/data-structures/graph/connected-components","docId":"data-structures/graph/connected-components"},{"type":"link","label":"Bipartite Graph","href":"/blog/data-structures/graph/bipartite","docId":"data-structures/graph/bipartite"},{"type":"category","label":"Bipartite Graph","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Possible Bipartition","href":"/blog/data-structures/graph/bipartite-graph/possible_bipartition","docId":"data-structures/graph/bipartite-graph/possible_bipartition"}],"href":"/blog/data-structures/graph/bipartite-graph/"}],"href":"/blog/data-structures/graph/"}],"href":"/blog/category/data-structures"},{"type":"category","label":"Algorithms","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to Algorithms","href":"/blog/algorithms/intro","docId":"algorithms/intro"},{"type":"category","label":"Kadane\'s Algorithm","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Flip Bits","href":"/blog/algorithms/kadanes-algorithm/flip-bits","docId":"algorithms/kadanes-algorithm/flip-bits"},{"type":"link","label":"Maximum Subarray Sum","href":"/blog/algorithms/kadanes-algorithm/maximum-subarray-sum","docId":"algorithms/kadanes-algorithm/maximum-subarray-sum"}],"href":"/blog/algorithms/kadanes-algorithm/"},{"type":"link","label":"Monotonic Stack","href":"/blog/algorithms/monotonic-stack/","docId":"algorithms/monotonic-stack/index"}],"href":"/blog/category/algorithms"}]},"docs":{"algorithms/intro":{"id":"algorithms/intro","title":"Introduction to Algorithms","description":"The word Algorithm means \u201dA set of finite rules or instructions to be followed in calculations or other problem-solving operations\u201d Or \u201dA procedure for solving a mathematical problem in a finite number of steps that frequently involves recursive operations\u201d.","sidebar":"algorithms"},"algorithms/kadanes-algorithm/flip-bits":{"id":"algorithms/kadanes-algorithm/flip-bits","title":"Flip Bits","description":"Problem Statement","sidebar":"algorithms"},"algorithms/kadanes-algorithm/index":{"id":"algorithms/kadanes-algorithm/index","title":"Kadane\'s Algorithm","description":"Problems","sidebar":"algorithms"},"algorithms/kadanes-algorithm/maximum-subarray-sum":{"id":"algorithms/kadanes-algorithm/maximum-subarray-sum","title":"Maximum Subarray Sum","description":"Problem Links","sidebar":"algorithms"},"algorithms/monotonic-stack/index":{"id":"algorithms/monotonic-stack/index","title":"Monotonic Stack","description":"Problems","sidebar":"algorithms"},"data-structures/graph/bipartite":{"id":"data-structures/graph/bipartite","title":"Bipartite Graph","description":"Practice Problems","sidebar":"dataStructures"},"data-structures/graph/bipartite-graph/index":{"id":"data-structures/graph/bipartite-graph/index","title":"Bipartite Graph","description":"Solved Examples","sidebar":"dataStructures"},"data-structures/graph/bipartite-graph/possible_bipartition":{"id":"data-structures/graph/bipartite-graph/possible_bipartition","title":"Possible Bipartition","description":"Problem Statement","sidebar":"dataStructures"},"data-structures/graph/connected-components":{"id":"data-structures/graph/connected-components","title":"Connected Components","description":"Practice Problems","sidebar":"dataStructures"},"data-structures/graph/index":{"id":"data-structures/graph/index","title":"Graph Theory","description":"Topics","sidebar":"dataStructures"},"data-structures/intro":{"id":"data-structures/intro","title":"Introduction to Data Structures","description":"A data structure is a storage that is used to store and organize data. It is a way of arranging data on a computer so that it can be accessed and updated efficiently.","sidebar":"dataStructures"}}}')}}]);