"use strict";(self.webpackChunkjhasuraj_blog=self.webpackChunkjhasuraj_blog||[]).push([[2992],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(r),u=a,f=p["".concat(c,".").concat(u)]||p[u]||m[u]||i;return r?n.createElement(f,o(o({ref:t},d),{},{components:r})):n.createElement(f,o({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2991:(e,t,r)=>{r.d(t,{Z:()=>y});var n=r(7294),a=r(6010),i=r(3438),o=r(9960),l=r(3919),c=r(5999);const s={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function d(e){let{href:t,children:r}=e;return n.createElement(o.Z,{href:t,className:(0,a.Z)("card padding--lg",s.cardContainer)},r)}function p(e){let{href:t,icon:r,title:i,description:o}=e;return n.createElement(d,{href:t},n.createElement("h2",{className:(0,a.Z)("text--truncate",s.cardTitle),title:i},r," ",i),o&&n.createElement("p",{className:(0,a.Z)("text--truncate",s.cardDescription),title:o},o))}function m(e){let{item:t}=e;const r=(0,i.Wl)(t);return r?n.createElement(p,{href:r,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??(0,c.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function u(e){let{item:t}=e;const r=(0,l.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,i.xz)(t.docId??void 0);return n.createElement(p,{href:t.href,icon:r,title:t.label,description:t.description??a?.description})}function f(e){let{item:t}=e;switch(t.type){case"link":return n.createElement(u,{item:t});case"category":return n.createElement(m,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function g(e){let{className:t}=e;const r=(0,i.jA)();return n.createElement(y,{items:r.items,className:t})}function y(e){const{items:t,className:r}=e;if(!t)return n.createElement(g,e);const o=(0,i.MN)(t);return n.createElement("section",{className:(0,a.Z)("row",r)},o.map(((e,t)=>n.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},n.createElement(f,{item:e})))))}},116:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var n=r(7462),a=(r(7294),r(3905)),i=r(2991);const o={title:"Tree",displayed_sidebar:"dataStructures",keywords:["Tree","DSA","Algorithms"]},l="Tree Introduction",c={unversionedId:"data-structures/tree/index",id:"data-structures/tree/index",title:"Tree",description:"Here are some important topics related to trees that are commonly covered in technical interviews:",source:"@site/docs/data-structures/tree/index.mdx",sourceDirName:"data-structures/tree",slug:"/data-structures/tree/",permalink:"/blog/data-structures/tree/",draft:!1,editUrl:"https://github.com/jhasuraj01/blog/tree/main/docs/data-structures/tree/index.mdx",tags:[],version:"current",lastUpdatedBy:"Suraj Jha",lastUpdatedAt:1671747766,formattedLastUpdatedAt:"Dec 22, 2022",frontMatter:{title:"Tree",displayed_sidebar:"dataStructures",keywords:["Tree","DSA","Algorithms"]},sidebar:"dataStructures",previous:{title:"Possible Bipartition",permalink:"/blog/data-structures/graph/bipartite-graph/possible_bipartition"},next:{title:"DFS traversal in Tree",permalink:"/blog/data-structures/tree/dfs"}},s={},d=[{value:"Standard Tree Problems",id:"standard-tree-problems",level:3},{value:"Topics Covered",id:"topics-covered",level:2}],p={toc:d},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tree-introduction"},"Tree Introduction"),(0,a.kt)("p",null,"Here are some important topics related to trees that are commonly covered in technical interviews:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Tree representation"),": How to represent a tree in memory, including array and linked list representations."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Tree traversal"),": How to traverse a tree, including ",(0,a.kt)("inlineCode",{parentName:"li"},"in-order"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"pre-order"),", and ",(0,a.kt)("inlineCode",{parentName:"li"},"post-order")," traversals."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Binary search tree"),": How to implement and maintain a binary search tree, including insertion, deletion, and search operations."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Heap"),": How to implement and maintain a heap, including insertion, deletion, and heapify operations."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Red-black tree"),": How to implement and maintain a red-black tree, including insertion, deletion, and search operations."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Trie"),": How to implement and maintain a trie, including insertion, deletion, and search operations."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Huffman coding tree"),": How to construct a Huffman coding tree for data compression."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Segment tree"),": How to implement and maintain a segment tree, including construction, query, and update operations."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Fenwick tree")," (Binary Indexed Tree): How to implement and maintain a Fenwick tree, including construction, query, and update operations."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"AVL tree"),": How to implement and maintain an AVL tree, including insertion, deletion, and search operations.")),(0,a.kt)("h3",{id:"standard-tree-problems"},"Standard Tree Problems"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"height of a tree"),(0,a.kt)("li",{parentName:"ul"},"diameter of a tree"),(0,a.kt)("li",{parentName:"ul"},"size of a tree"),(0,a.kt)("li",{parentName:"ul"},"lowest common ancestor")),(0,a.kt)("p",null,"It's also helpful to be familiar with various types of trees, such as binary trees, ",(0,a.kt)("inlineCode",{parentName:"p"},"n-ary")," trees, and balanced and unbalanced trees."),(0,a.kt)("h2",{id:"topics-covered"},"Topics Covered"),(0,a.kt)(i.Z,{mdxType:"DocCardList"}))}u.isMDXComponent=!0}}]);