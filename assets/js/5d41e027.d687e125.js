"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[536],{3905:(t,e,r)=>{r.d(e,{Zo:()=>d,kt:()=>y});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=n.createContext({}),u=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},d=function(t){var e=u(t.components);return n.createElement(s.Provider,{value:e},t.children)},l="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,s=t.parentName,d=c(t,["components","mdxType","originalType","parentName"]),l=u(r),f=a,y=l["".concat(s,".").concat(f)]||l[f]||p[f]||o;return r?n.createElement(y,i(i({ref:e},d),{},{components:r})):n.createElement(y,i({ref:e},d))}));function y(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,i=new Array(o);i[0]=f;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c[l]="string"==typeof t?t:a,i[1]=c;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5918:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:1,displayed_sidebar:"dataStructures"},i="Introduction to Data Structures",c={unversionedId:"data-structures/intro",id:"data-structures/intro",title:"Introduction to Data Structures",description:"A data structure is a storage that is used to store and organize data. It is a way of arranging data on a computer so that it can be accessed and updated efficiently.",source:"@site/docs/data-structures/01_intro.mdx",sourceDirName:"data-structures",slug:"/data-structures/intro",permalink:"/blog/data-structures/intro",draft:!1,editUrl:"https://github.com/jhasuraj01/blog/tree/main/docs/data-structures/01_intro.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,displayed_sidebar:"dataStructures"},sidebar:"dataStructures"},s={},u=[{value:"Classification of Data Structure",id:"classification-of-data-structure",level:2}],d={toc:u};function l(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction-to-data-structures"},"Introduction to Data Structures"),(0,a.kt)("p",null,"A data structure is a storage that is used to store and organize data. It is a way of arranging data on a computer so that it can be accessed and updated efficiently."),(0,a.kt)("h2",{id:"classification-of-data-structure"},"Classification of Data Structure"),(0,a.kt)("mermaid",{value:"graph TD;\n    ds[Data Structures];\n    nl[Non-Linear];\n\n    ds --\x3e nl;\n    nl --\x3e Tree;\n    nl --\x3e Graph;\n\n    ds --\x3e Linear --\x3e Static  --\x3e Array;\n\n    Linear --\x3e Dynamic --\x3e ll[Linked List];\n    Dynamic --\x3e Stack;\n    Dynamic --\x3e Queue;"}))}l.isMDXComponent=!0}}]);